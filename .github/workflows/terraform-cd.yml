name: Terraform_Infrastructure_Setup

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
  
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform_cd

    - name: Validate Terraform
      run: terraform validate
      working-directory: ./terraform_cd

    - name: Plan Infrastructure
      run: terraform plan -out=tfplan
      working-directory: ./terraform_cd

    - name: Apply Infrastructure
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform_cd

    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install pynacl
    - name: Get EC2 Public IP
      id: get-ec2-ip
      run: |
        unset TF_LOG
        EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip | tr -d '\n')
        echo "ec2_ip=$EC2_PUBLIC_IP" >> $GITHUB_OUTPUT
      working-directory: ./terraform_cd

    - name: Update EC2_PUBLIC_IP Secret
      run: |
        PUBLIC_KEY_INFO=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/actions/secrets/public-key)
        
        PUBLIC_KEY=$(echo $PUBLIC_KEY_INFO | jq -r '.key')
        PUBLIC_KEY_ID=$(echo $PUBLIC_KEY_INFO | jq -r '.key_id')
        
        # Encrypt the secret using Python
        ENCRYPTED_VALUE=$(python3 -c "
        from base64 import b64encode
        from nacl import encoding, public
        def encrypt(public_key: str, secret_value: str) -> str:
            public_key = public.PublicKey(public_key.encode('utf-8'), encoding.Base64Encoder())
            sealed_box = public.SealedBox(public_key)
            encrypted = sealed_box.encrypt(secret_value.encode('utf-8'))
            return b64encode(encrypted).decode('utf-8')
        print(encrypt('$PUBLIC_KEY', '${{ steps.get-ec2-ip.outputs.ec2_ip }}'))
        ")
        
        # Update the secret
        curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/actions/secrets/EC2_PUBLIC_IP \
          -d "{\"encrypted_value\":\"$ENCRYPTED_VALUE\",\"key_id\":\"$PUBLIC_KEY_ID\"}"
    
      