name: Kubernetes Deployment

on:
  repository_dispatch:
    types: [deploy-to-kubernetes]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Get EC2 IP
        run: |
          echo "Using EC2 IP: ${{ github.event.client_payload.ec2_ip }}"
          echo "EC2_IP=${{ github.event.client_payload.ec2_ip }}" >> $GITHUB_ENV

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Wait for EC2 SSH to be ready
        run: |
          timeout=300
          while ! ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${EC2_IP} echo "SSH ready"
          do
            sleep 10
            timeout=$((timeout - 10))
            if [ $timeout -le 0 ]; then
              echo "Timeout waiting for SSH"
              exit 1
            fi
          done

      - name: Install Docker and Kind
        run: |
          ssh -i private_key.pem ubuntu@${EC2_IP} '
            # Install Docker
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo usermod -aG docker ubuntu

            # Install Kind
            curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin/kind

            # Install kubectl
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/

            # Create Kind cluster
            kind create cluster --name my-cluster
          '

      - name: Verify Cluster
        run: |
          ssh -i private_key.pem ubuntu@${EC2_IP} '
            kubectl cluster-info
            kubectl get nodes
          '